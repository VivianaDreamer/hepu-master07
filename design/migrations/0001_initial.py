# Generated by Django 4.0.3 on 2022-03-30 12:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Design',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(default='Project', max_length=30, verbose_name='Project name')),
                ('location', models.CharField(max_length=30, verbose_name='Location')),
                ('cod', models.IntegerField(default=2025, validators=[django.core.validators.MinValueValidator(limit_value=2000, message='Value must be greater than 2000')], verbose_name='Start of production')),
                ('horizon', models.IntegerField(default=20, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be greater than 1')], verbose_name='Years of operation')),
                ('op_type', models.CharField(choices=[('PPA', 'PPA'), ('On-site generation', 'On-Site Generation')], default='PPA', max_length=30, verbose_name='Operation type')),
                ('ppa_type', models.CharField(blank=True, choices=[('24/7', '24/7'), ('customized', 'Customized')], default='24/7', max_length=30, verbose_name='PPA type')),
                ('nom_power', models.IntegerField(blank=True, default=10, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be on range between 1 and 100'), django.core.validators.MaxValueValidator(limit_value=100, message='Value must be on range between 1 and 100')], verbose_name='Nominal power')),
                ('customized_from', models.CharField(blank=True, choices=[('0:00', '0:00'), ('1:00', '1:00'), ('2:00', '2:00'), ('3:00', '3:00'), ('4:00', '4:00'), ('5:00', '5:00'), ('6:00', '6:00'), ('7:00', '7:00'), ('8:00', '8:00'), ('9:00', '9:00'), ('10:00', '10:00'), ('11:00', '11:00'), ('12:00', '12:00'), ('13:00', '13:00'), ('14:00', '14:00'), ('15:00', '15:00'), ('16:00', '16:00'), ('17:00', '17:00'), ('18:00', '18:00'), ('19:00', '19:00'), ('20:00', '20:00'), ('21:00', '21:00'), ('22:00', '22:00'), ('23:00', '23:00')], default='8:00', max_length=5, verbose_name='From')),
                ('customized_to', models.CharField(blank=True, choices=[('0:00', '0:00'), ('1:00', '1:00'), ('2:00', '2:00'), ('3:00', '3:00'), ('4:00', '4:00'), ('5:00', '5:00'), ('6:00', '6:00'), ('7:00', '7:00'), ('8:00', '8:00'), ('9:00', '9:00'), ('10:00', '10:00'), ('11:00', '11:00'), ('12:00', '12:00'), ('13:00', '13:00'), ('14:00', '14:00'), ('15:00', '15:00'), ('16:00', '16:00'), ('17:00', '17:00'), ('18:00', '18:00'), ('19:00', '19:00'), ('20:00', '20:00'), ('21:00', '21:00'), ('22:00', '22:00'), ('23:00', '23:00')], default='18:00', max_length=5, verbose_name='To')),
                ('elec_type', models.CharField(choices=[('pem', 'PEM'), ('alk', 'ALK'), ('soec', 'SOEC')], default='PEM', max_length=30, verbose_name='Electrolyzer type')),
                ('elec_size', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be on range between 1 and 100'), django.core.validators.MaxValueValidator(limit_value=100, message='Value must be on range between 1 and 100')], verbose_name='Electrolyzer nominal power')),
                ('energy_cost', models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be on range between 1 and 100'), django.core.validators.MaxValueValidator(limit_value=100, message='Value must be on range between 1 and 100')], verbose_name='Energy cost')),
                ('water_cost', models.FloatField(default=3, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be on range between 1 and 100'), django.core.validators.MaxValueValidator(limit_value=100, message='Value must be on range between 1 and 100')], verbose_name='Water cost')),
                ('water_type', models.CharField(choices=[('tap', 'Tap Water'), ('demi', 'Deionized-demi Water')], default='tap', max_length=30, verbose_name='Water type')),
                ('elec_cost', models.FloatField(default=1.2, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be on range between 1 and 100'), django.core.validators.MaxValueValidator(limit_value=100, message='Value must be on range between 1 and 100')], verbose_name='Electrolyzer cost')),
                ('develop_cost', models.FloatField(default=0.5, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be on range between 1 and 100'), django.core.validators.MaxValueValidator(limit_value=100, message='Value must be on range between 1 and 100')], verbose_name='Development cost')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'design',
                'verbose_name_plural': 'designs',
                'ordering': ['-created'],
            },
        ),
    ]
