# Generated by Django 4.0.3 on 2022-04-20 17:38

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('design', '0002_design_lcoh_design_nvp_h2_design_nvp_h2_output_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='design',
            name='debt',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0), django.core.validators.MaxValueValidator(limit_value=100)], verbose_name='Debt [%]'),
        ),
        migrations.AddField(
            model_name='design',
            name='debt_term',
            field=models.IntegerField(default=0, verbose_name='Debt term [years]'),
        ),
        migrations.AddField(
            model_name='design',
            name='equity_discount_rate',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0), django.core.validators.MaxValueValidator(limit_value=100)], verbose_name='Equity discount rate [%]'),
        ),
        migrations.AddField(
            model_name='design',
            name='first_category_tax',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0), django.core.validators.MaxValueValidator(limit_value=100)], verbose_name='First category Tax [%]'),
        ),
        migrations.AddField(
            model_name='design',
            name='interest_rate',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0), django.core.validators.MaxValueValidator(limit_value=100)], verbose_name='Interest Rate [%]'),
        ),
        migrations.AddField(
            model_name='design',
            name='land_cost',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0, message='Value must be gratter than 0')], verbose_name='Land cost'),
        ),
        migrations.AddField(
            model_name='design',
            name='om',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0, message='Value must be gratter than 0')], verbose_name='O&M [USD/kW/year]'),
        ),
        migrations.AlterField(
            model_name='design',
            name='develop_cost',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be on range between 1 and 100'), django.core.validators.MaxValueValidator(limit_value=100, message='Value must be on range between 1 and 100')], verbose_name='Specific Development cost'),
        ),
        migrations.AlterField(
            model_name='design',
            name='elec_cost',
            field=models.FloatField(default=1.2, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be on range between 1 and 100'), django.core.validators.MaxValueValidator(limit_value=100, message='Value must be on range between 1 and 100')], verbose_name='Specific Electrolyzer and BoP cost [USD/kW]'),
        ),
        migrations.AlterField(
            model_name='design',
            name='elec_size',
            field=models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be on range between 1 and 10'), django.core.validators.MaxValueValidator(limit_value=10, message='Value must be on range between 1 and 10')], verbose_name='Electrolyzer nominal power [MW]'),
        ),
        migrations.AlterField(
            model_name='design',
            name='energy_cost',
            field=models.FloatField(default=50, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be on range between 1 and 100'), django.core.validators.MaxValueValidator(limit_value=100, message='Value must be on range between 1 and 100')], verbose_name='Energy cost [USD/MWh]'),
        ),
        migrations.AlterField(
            model_name='design',
            name='nom_power',
            field=models.IntegerField(blank=True, default=10, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be on range between 1 and 100'), django.core.validators.MaxValueValidator(limit_value=100, message='Value must be on range between 1 and 100')], verbose_name='PPA nominal power [MW]'),
        ),
        migrations.AlterField(
            model_name='design',
            name='op_type',
            field=models.CharField(choices=[('PPA', 'PPA'), ('Custom', 'Customized'), ('On-site generation', 'User-defined generation vector')], default='PPA', max_length=30, verbose_name='Energy input'),
        ),
        migrations.AlterField(
            model_name='design',
            name='water_cost',
            field=models.FloatField(default=3, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be on range between 1 and 100'), django.core.validators.MaxValueValidator(limit_value=100, message='Value must be on range between 1 and 100')], verbose_name='Water cost [USD/m3]'),
        ),
        migrations.AlterField(
            model_name='design',
            name='water_type',
            field=models.CharField(choices=[('Tap', 'Tap Water'), ('demi', 'Deionized-demi Water')], default='tap', max_length=30, verbose_name='Water supply'),
        ),
    ]
